// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  defineQ(['knockout', 'q', 'odo/auth/current-user', 'plugins/router', 'odo/inject'], function(ko, Q, currentUser, router, inject) {
    var ViewFeedbackOpportunity;
    return ViewFeedbackOpportunity = (function() {
      function ViewFeedbackOpportunity() {
        this.complete = __bind(this.complete, this);
        this.expire = __bind(this.expire, this);
        this.cancel = __bind(this.cancel, this);
        this.getFeedback = __bind(this.getFeedback, this);
        this.activate = __bind(this.activate, this);
        this.canActivate = __bind(this.canActivate, this);
      }

      ViewFeedbackOpportunity.prototype.title = ko.observable('');

      ViewFeedbackOpportunity.prototype.feedback = ko.observable(null);

      ViewFeedbackOpportunity.prototype.user = ko.observable(null);

      ViewFeedbackOpportunity.prototype.canActivate = function(id) {
        var dfd,
          _this = this;
        dfd = Q.defer();
        this.getFeedback(id).then(function(feedback) {
          return dfd.resolve(true);
        }).fail(function() {
          return dfd.resolve(false);
        });
        return dfd.promise;
      };

      ViewFeedbackOpportunity.prototype.activate = function(id) {
        var _this = this;
        return this.getFeedback(id).then(function(feedback) {
          _this.user(currentUser);
          return _this.feedback(feedback);
        });
      };

      ViewFeedbackOpportunity.prototype.getFeedback = function(id) {
        return $.get("/view-feedback-opportunity/" + id);
      };

      ViewFeedbackOpportunity.prototype.cancel = function() {
        var _this = this;
        return Q($.post('/sendcommand/cancelFeedbackOpportunity', this.feedback())).then(function() {
          return router.navigate('#user/' + _this.user().username);
        });
      };

      ViewFeedbackOpportunity.prototype.expire = function() {
        var _this = this;
        return Q($.post('/sendcommand/expireFeedbackOpportunity', this.feedback())).then(function() {
          return router.navigate('#user/' + _this.user().username);
        });
      };

      ViewFeedbackOpportunity.prototype.complete = function() {
        var _this = this;
        return Q($.post('/sendcommand/completeFeedbackOpportunity', this.feedback())).then(function() {
          return router.navigate('#user/' + _this.user().username);
        });
      };

      return ViewFeedbackOpportunity;

    })();
  });

}).call(this);
