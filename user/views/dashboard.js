// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(['q', 'knockout', 'odo/auth', 'user', 'odo/inject'], function(Q, ko, auth, user, inject) {
    var UserDashboard;
    return UserDashboard = (function() {
      function UserDashboard() {
        this.activate = __bind(this.activate, this);
        this.canActivate = __bind(this.canActivate, this);
      }

      UserDashboard.prototype.widgets = inject.many('user/dashboard/widgets');

      UserDashboard.prototype.title = ko.observable('');

      UserDashboard.prototype.viewingUser = ko.observable(null);

      UserDashboard.prototype.dashboardUser = ko.observable(null);

      UserDashboard.prototype.dashboardModel = ko.observable(null);

      UserDashboard.prototype.canActivate = function(username) {
        var dfd,
          _this = this;
        dfd = Q.defer();
        auth.getUser().then(function(viewingUser) {
          return user.getUser(username).then(function(dashboardUser) {
            return dfd.resolve(true);
          }).fail(function(err) {
            return dfd.resolve(false);
          });
        }).fail(function(err) {
          return dfd.resolve(false);
        });
        return dfd.promise;
      };

      UserDashboard.prototype.activate = function(username) {
        var dfd,
          _this = this;
        dfd = Q.defer();
        auth.getUser().then(function(viewingUser) {
          return user.getUser(username).then(function(dashboardUser) {
            _this.viewingUser(viewingUser);
            _this.dashboardUser(dashboardUser);
            if (viewingUser.id === dashboardUser.id) {
              _this.dashboardModel('views/user/dashboard-self');
            } else {
              _this.dashboardModel('views/user/dashboard-other');
            }
            return dfd.resolve(true);
          }).fail(function(err) {
            return dfd.resolve(false);
          });
        }).fail(function(err) {
          return dfd.resolve(false);
        });
        return dfd.promise;
      };

      return UserDashboard;

    })();
  });

}).call(this);
