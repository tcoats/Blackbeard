// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(['module', 'odo/messaging/hub', 'odo/express/configure', 'odo/express/app', 'odo/durandal/plugin', 'redis', 'odo/user/userprofile'], function(module, hub, configure, app, durandal, redis, UserProfile) {
    var User, db;
    db = redis.createClient();
    return User = (function() {
      function User() {
        this.user = __bind(this.user, this);
        this.projection = __bind(this.projection, this);
        this.web = __bind(this.web, this);
      }

      User.prototype.web = function() {
        configure.route('/', configure.modulepath(module.uri) + '/public');
        configure.route('/views/user', configure.modulepath(module.uri) + '/views');
        configure.route('/widgets', configure.modulepath(module.uri) + '/widgets');
        durandal.register('user');
        durandal.register('local/widgets/avatar');
        return app.get('/blackbeard/user', this.user);
      };

      User.prototype.projection = function() {
        return hub.receive('userHasUsername', (function(_this) {
          return function(event, cb) {
            return db.hset('blackbeard:username', event.payload.username, event.payload.id, cb);
          };
        })(this));
      };

      User.prototype.user = function(req, res) {
        if (req.query.username == null) {
          res.send('Username required');
          return;
        }
        return this.get(req.query.username, (function(_this) {
          return function(err, user) {
            if (err != null) {
              console.log(err);
              res.send(500, 'Woops');
              return;
            }
            if (user == null) {
              res.send(404, 'User not found');
              return;
            }
            return res.send(user);
          };
        })(this));
      };

      User.prototype.get = function(username, callback) {
        return db.hget('blackbeard:username', username, (function(_this) {
          return function(err, userid) {
            if (err != null) {
              console.log(err);
              callback(err);
              return;
            }
            return new UserProfile().get(userid, function(err, user) {
              if (err != null) {
                console.log(err);
                callback(err);
                return;
              }
              if (user == null) {
                callback(null, null);
                return;
              }
              return callback(null, {
                id: user.id,
                displayName: user.displayName,
                username: user.username,
                emailHash: user.emailHash
              });
            });
          };
        })(this));
      };

      return User;

    })();
  });

}).call(this);
