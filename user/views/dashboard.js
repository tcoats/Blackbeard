// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  defineQ(['q', 'knockout', 'odo/auth/current-user', 'user', 'odo/inject'], function(Q, ko, currentUser, user, inject) {
    var UserDashboard;
    return UserDashboard = (function() {
      function UserDashboard() {
        this.activate = __bind(this.activate, this);
        this.canActivate = __bind(this.canActivate, this);
        this.dashboardUser = ko.observable(null);
        this.dashboardModel = ko.observable(null);
      }

      UserDashboard.prototype.canActivate = function(username) {
        var dfd;
        dfd = Q.defer();
        user.getUser(username).then((function(_this) {
          return function(dashboardUser) {
            return dfd.resolve(true);
          };
        })(this)).fail((function(_this) {
          return function(err) {
            return dfd.resolve(false);
          };
        })(this)).done();
        return dfd.promise;
      };

      UserDashboard.prototype.activate = function(username) {
        var dfd;
        dfd = Q.defer();
        user.getUser(username).then((function(_this) {
          return function(dashboardUser) {
            _this.dashboardUser(dashboardUser);
            if (currentUser.id === dashboardUser.id) {
              _this.dashboardModel('views/user/dashboard-self');
            } else {
              _this.dashboardModel('views/user/dashboard-other');
            }
            return dfd.resolve(true);
          };
        })(this)).fail((function(_this) {
          return function(err) {
            return dfd.resolve(false);
          };
        })(this)).done();
        return dfd.promise;
      };

      return UserDashboard;

    })();
  });

}).call(this);
