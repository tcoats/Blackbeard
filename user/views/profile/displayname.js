// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  defineQ(['knockout', 'odo/auth', 'odo/auth/current-user'], function(ko, auth, user) {
    var ChangeDisplayName;
    return ChangeDisplayName = (function() {
      ChangeDisplayName.prototype.user = ko.observable(null);

      function ChangeDisplayName() {
        this.changeDisplayName = __bind(this.changeDisplayName, this);
        this.back = __bind(this.back, this);
        this.activate = __bind(this.activate, this);
        this.displayName = ko.observable('').extend({
          required: true
        });
        this.errors = ko.validation.group(this);
      }

      ChangeDisplayName.prototype.activate = function(options) {
        this.wizard = options.wizard, this.dialog = options.dialog;
        this.user(user);
        return this.displayName(user.displayName);
      };

      ChangeDisplayName.prototype.back = function() {
        return this.wizard.back({
          model: 'views/user/profile/review'
        })();
      };

      ChangeDisplayName.prototype.changeDisplayName = function() {
        var _this = this;
        if (this.isValidating()) {
          return;
        }
        if (!this.isValid()) {
          this.dialog.shake();
          this.errors.showAllMessages();
          return;
        }
        if (this.user().displayName === this.displayName()) {
          this.back();
        }
        return auth.assignDisplayNameToUser(this.user().id, this.displayName()).then(function() {
          return _this.back();
        });
      };

      return ChangeDisplayName;

    })();
  });

}).call(this);
