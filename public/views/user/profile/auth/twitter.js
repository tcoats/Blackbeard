// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(['q', 'knockout', 'odo/auth'], function(Q, ko, auth) {
    var TwitterProfile;
    return TwitterProfile = (function() {
      function TwitterProfile() {
        this.back = __bind(this.back, this);
        this.disconnect = __bind(this.disconnect, this);
        this.stopDisconnect = __bind(this.stopDisconnect, this);
        this.startDisconnect = __bind(this.startDisconnect, this);
        this.activate = __bind(this.activate, this);
      }

      TwitterProfile.prototype.user = ko.observable(null);

      TwitterProfile.prototype.activate = function(options) {
        var dfd,
          _this = this;
        this.wizard = options.wizard, this.dialog = options.dialog;
        dfd = Q.defer();
        auth.getUser().then(function(user) {
          _this.user(user);
          return dfd.resolve(true);
        }).fail(function(err) {
          return dfd.resolve(true);
        });
        return dfd.promise;
      };

      TwitterProfile.prototype.disconnectStarted = ko.observable(false);

      TwitterProfile.prototype.startDisconnect = function() {
        return this.disconnectStarted(true);
      };

      TwitterProfile.prototype.stopDisconnect = function() {
        return this.disconnectStarted(false);
      };

      TwitterProfile.prototype.disconnect = function() {
        var _this = this;
        return auth.disconnectTwitterFromUser(this.user().id, this.user().twitter.profile).then(function() {
          return _this.back();
        });
      };

      TwitterProfile.prototype.back = function() {
        return this.wizard.back({
          model: 'views/user/profile/review'
        })();
      };

      return TwitterProfile;

    })();
  });

}).call(this);
