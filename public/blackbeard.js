// Generated by CoffeeScript 1.6.3
(function() {
  requirejs.config({
    paths: {
      text: 'requirejs-text/text',
      durandal: 'durandal/js',
      plugins: 'durandal/js/plugins',
      transitions: 'odo/durandal/transitions',
      components: 'odo/durandal/components',
      knockout: 'knockout.js/knockout',
      'ko.validation': 'bindings/knockout.validation.min',
      bootstrap: 'bootstrap/dist/js/bootstrap.min',
      bootstrapcss: 'bootstrap/dist/css/bootstrap.min',
      jquery: 'jquery/jquery.min',
      animatecss: 'animate.css/animate.min',
      fontawesome: 'font-awesome/css/font-awesome.min',
      uuid: 'node-uuid/uuid',
      q: 'q/q',
      odo: 'odo',
      mousetrap: 'mousetrap/mousetrap.min',
      marked: 'marked/lib/marked',
      slider: 'bindings/slider'
    },
    map: {
      '*': {
        css: 'require-css/css.min'
      }
    },
    shim: {
      bootstrap: {
        deps: ['jquery'],
        exports: 'jQuery'
      },
      'ko.validation': {
        deps: ['knockout']
      },
      mousetrap: {
        exports: 'Mousetrap'
      },
      marked: {
        exports: 'marked'
      }
    },
    urlArgs: 'v=' + (new Date()).getTime()
  });

  define(['jquery', 'durandal/system', 'durandal/app', 'durandal/viewLocator', 'odo/durandal/bindings', 'bindings/blackbeardbindings'], function($, system, app, locator, bindings, blackbeardbindings) {
    system.debug(true);
    app.title = 'Blackbeard';
    app.configurePlugins({
      router: true,
      dialog: true,
      widget: true
    });
    bindings.init(requirejs, {
      router: true,
      mousetrap: true,
      q: true,
      bootstrap: true,
      marked: true,
      dialog: true,
      validation: true
    });
    blackbeardbindings.init(requirejs, {
      slider: true
    });
    return $.get('/odo/components').then(function(components) {
      return requirejs(components, function() {
        return app.start().then(function() {
          locator.useConvention('views');
          return app.setRoot('shell');
        });
      });
    });
  });

}).call(this);
