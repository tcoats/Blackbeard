// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(['redis'], function(redis) {
    var FeedbackContent, db;
    db = redis.createClient();
    return FeedbackContent = (function() {
      function FeedbackContent() {
        this.init = __bind(this.init, this);
        var _this = this;
        this.receive = {
          feedbackBegun: function(event, cb) {
            var feedback;
            feedback = {
              id: event.payload.id,
              type: event.payload.type,
              options: event.payload.options,
              description: event.payload.name,
              reviewer: event.payload.reviewer
            };
            return db.set("feedbackforreviewer:" + feedback.id, JSON.stringify(feedback, function() {
              return cb();
            }));
          },
          feedbackCancelled: function(event, cb) {
            var id;
            id = event.payload.id;
            return db.del("feedbackforreviewer:" + id, function() {
              return cb();
            });
          },
          feedbackCompleted: function(event, cb) {
            var id;
            id = event.payload.id;
            return db.del("feedbackforreviewer:" + id, function() {
              return cb();
            });
          }
        };
      }

      FeedbackContent.prototype.init = function(app) {
        var _this = this;
        return app.get('/feedbackforreviewer/:id', function(req, res) {
          return _this.get(req.params.id, function(err, feedback) {
            if (err != null) {
              res.send(500, err);
              return;
            }
            if (feedback == null) {
              res.send(404, err);
              return;
            }
            res.send(feedback);
          });
        });
      };

      FeedbackContent.prototype.get = function(id, callback) {
        var _this = this;
        return db.get("feedbackforreviewer:" + id, function(err, data) {
          if (err != null) {
            callback(err);
            return;
          }
          data = JSON.parse(data);
          return callback(null, data);
        });
      };

      return FeedbackContent;

    })();
  });

}).call(this);
