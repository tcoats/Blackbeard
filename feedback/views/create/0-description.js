// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  defineQ(['knockout', 'uuid', 'odo/auth/current-user', 'plugins/router'], function(ko, uuid, currentUser, router) {
    var Description;
    return Description = (function() {
      Description.prototype.userid = ko.observable(null);

      function Description() {
        this.createFeedbackOpportunity = __bind(this.createFeedbackOpportunity, this);
        this.close = __bind(this.close, this);
        this.activate = __bind(this.activate, this);
        this.description = ko.observable('').extend({
          required: true
        });
        this.errors = ko.validation.group(this);
      }

      Description.prototype.activate = function(options) {
        this.wizard = options.wizard, this.dialog = options.dialog;
        return this.userid(currentUser.id);
      };

      Description.prototype.close = function() {
        return this.dialog.close();
      };

      Description.prototype.createFeedbackOpportunity = function() {
        var feedback,
          _this = this;
        if (this.isValidating()) {
          return;
        }
        if (!this.isValid()) {
          this.dialog.shake();
          this.errors.showAllMessages();
          return;
        }
        feedback = {
          id: uuid.v1(),
          "for": this.userid,
          description: this.description()
        };
        return $.post('/sendcommand/createFeedbackOpportunity', feedback).then(function() {
          _this.dialog.close();
          return router.navigate("/view-feedback-opportunity/" + feedback.id);
        });
      };

      return Description;

    })();
  });

}).call(this);
